# default_platform(:ios)

# platform :ios do
#   desc "Take screenshots"
#   lane :take_screenshots do
#     capture_screenshots(
#       project: "list-for-ios/list-for-ios.xcodeproj" # Specify the correct project path
#     )
#   end

#   desc "Bump version and commit"
#   lane :bump_version do
#     increment_version_number
#     commit_version_bump(message: "Bump version to #{get_version_number}")
#     push_to_git_remote
#   end

#   desc "Enterprise release"
#   lane :enterprise_release do
#     match(type: "enterprise")
#     build_app(scheme: "list-for-ios", export_method: "enterprise")
#     upload_to_testflight
#     # Add your enterprise distribution steps here
#   end

#   desc "Deploy to TestFlight"
#   lane :deploy do
#     match(type: "appstore") # Ensure your certificates and profiles are installed
#     build_app(scheme: "list-for-ios") # Build your app
#     upload_to_testflight # Upload to TestFlight
#   end

#   desc "Upload IPA to TestFlight"
#   lane :upload_ipa_to_testflight do
#     api_key = app_store_connect_api_key(
#       key_id: ENV['APP_STORE_CONNECT_KEY_ID'],
#       issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
#       key_content: ENV['APP_STORE_CONNECT_PRIVATE_KEY'],
#       in_house: false
#     )
#     pilot(
#       api_key: api_key,
#       ipa: ENV['RUNNER_TEMP'] + "/list-for-ios.ipa"
#     )
#   end
# end

# default_platform(:ios)
# platform :ios do
#   desc "Upload IPA to TestFlight"
#   lane :upload_ipa_to_testflight do
#     api_key = app_store_connect_api_key(
#       key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
#       issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
#       key_content: ENV['APP_STORE_CONNECT_API_KEY']
#     )

#      pilot(
#        api_key: api_key,
#        ipa: ENV['RUNNER_TEMP'] + "/list-for-ios.ipa",
#        app_identifier: "com.ionicframework.listfforios" # Ensure this matches exactly
#      )
#    end
#  end


# default_platform(:ios)

# platform :ios do
#   desc "Increment build number"
#   lane :increment_build do
#     sh "cd ./list-for-ios && xcrun agvtool next-version -all"
#   end

#   desc "Increment version number to 1.0"
#   lane :increment_version do
#     sh "cd ./list-for-ios && xcrun agvtool new-marketing-version 1.1"
#   end

#   desc "Upload IPA to TestFlight"
#   lane :upload_ipa_to_testflight do
#     # Increment version number and build number before uploading
#     increment_version
#     increment_build

#     api_key = app_store_connect_api_key(
#       key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
#       issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
#       key_content: ENV['APP_STORE_CONNECT_API_KEY']
#     )

#     pilot(
#       api_key: api_key,
#       ipa: ENV['RUNNER_TEMP'] + "/list-for-ios.ipa",
#       app_identifier: "com.ionicframework.listfforios" # Ensure this matches exactly
#     )
#   end
# end

default_platform(:ios)

platform :ios do
  desc "Increment build number"
  lane :increment_build do
    sh "cd ./list-for-ios && xcrun agvtool next-version -all"
  end

  desc "Set initial version number if not set"
  lane :set_initial_version do
    set_info_plist_value(
      path: "./list-for-ios/build/listforpos.xcarchive/Products/Applications/list-for-ios.app/Info.plist",
      key: "CFBundleShortVersionString",
      value: "1.0"
    )
  end

  desc "Increment version number (patch by default)"
  lane :increment_version do
    increment_version_number(bump_type: "patch")
  end

  desc "Increment version number to a specific version (optional)"
  lane :increment_version_to do |options|
    version = options[:version] || "1.0"
    increment_version_number(version: version)
  end

  desc "Ensure version number is set"
  lane :ensure_version_set do
    begin
      version = get_info_plist_value(
        path: "./list-for-ios/build/listforpos.xcarchive/Products/Applications/list-for-ios.app/Info.plist",
        key: "CFBundleShortVersionString"
      )
    rescue => e
      UI.message("Error getting version: #{e.message}")
      version = ""
    end
    
    if version.nil? || version.empty?
      set_initial_version
    end
  end

  desc "Upload IPA to TestFlight"
  lane :upload_ipa_to_testflight do
    # Ensure the initial version number is set
    ensure_version_set

    # Increment version number (patch by default) before uploading
    increment_version

    # Increment build number before uploading
    increment_build

    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY']
    )

    pilot(
      api_key: api_key,
      ipa: ENV['RUNNER_TEMP'] + "/list-for-ios.ipa",
      app_identifier: "com.ionicframework.listfforios" # Ensure this matches exactly
    )
  end
end









