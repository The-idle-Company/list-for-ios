# default_platform(:ios)

# platform :ios do
#   desc "Take screenshots"
#   lane :take_screenshots do
#     capture_screenshots(
#       project: "list-for-ios/list-for-ios.xcodeproj" # Specify the correct project path
#     )
#   end

#   desc "Bump version and commit"
#   lane :bump_version do
#     increment_version_number
#     commit_version_bump(message: "Bump version to #{get_version_number}")
#     push_to_git_remote
#   end

#   desc "Enterprise release"
#   lane :enterprise_release do
#     match(type: "enterprise")
#     build_app(scheme: "list-for-ios", export_method: "enterprise")
#     upload_to_testflight
#     # Add your enterprise distribution steps here
#   end

#   desc "Deploy to TestFlight"
#   lane :deploy do
#     match(type: "appstore") # Ensure your certificates and profiles are installed
#     build_app(scheme: "list-for-ios") # Build your app
#     upload_to_testflight # Upload to TestFlight
#   end

#   desc "Upload IPA to TestFlight"
#   lane :upload_ipa_to_testflight do
#     api_key = app_store_connect_api_key(
#       key_id: ENV['APP_STORE_CONNECT_KEY_ID'],
#       issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
#       key_content: ENV['APP_STORE_CONNECT_PRIVATE_KEY'],
#       in_house: false
#     )
#     pilot(
#       api_key: api_key,
#       ipa: ENV['RUNNER_TEMP'] + "/list-for-ios.ipa"
#     )
#   end
# end



default_platform(:ios)

platform :ios do
  desc "Upload IPA to TestFlight"
  lane :upload_ipa_to_testflight do
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY']
    )
    
    pilot(
      api_key: api_key,
      ipa: ENV['RUNNER_TEMP'] + "/list-for-ios.ipa",
      app_identifier: "com.ionicframework.listfforios" # Ensure this matches exactly
    )
  end

  desc "Increment build number"
  lane :increment_build do
    increment_build_number(
      xcodeproj: "list-for-ios/list-for-ios.xcodeproj"
    )
  end

  desc "Increment version number"
  lane :increment_version do
    increment_version_number(
      bump_type: "patch" # This can be "patch", "minor", or "major"
    )
  end
end



