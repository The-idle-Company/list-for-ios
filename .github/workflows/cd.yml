name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: macos-latest

    steps:
      - name: Set debug logging
        run: echo "ACTIONS_RUNNER_DEBUG=true" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Fastlane
        run: |
          gem install bundler
          bundle install

      - name: Configure Git for Authentication
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global url."https://${{ secrets.PAT_TOKEN }}:@github.com/".insteadOf "https://github.com/"
          git config --global credential.helper store
          echo "https://${{ secrets.PAT_TOKEN }}@github.com" > ~/.git-credentials

      - name: Create App ID on Developer Portal
        run: |
          bundle exec fastlane produce -u your_apple_id@example.com -a com.ionicframework.Mylist --skip_itc --app_name "list-for-ios"
        env:
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}

      - name: Install the Apple certificate and provisioning profile
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        run: |
          bundle exec fastlane match appstore --shallow_clone

      - name: Build and sign iOS app using Fastlane
        run: bundle exec fastlane deploy
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          KEYCHAIN_PATH: $RUNNER_TEMP/app-signing.keychain-db
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Deploy the app
        env:
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
        run: |
          xcrun altool --upload-app --type ios --file $RUNNER_TEMP/App/App.ipa --apiKey $APP_STORE_CONNECT_KEY_ID --apiIssuer $APP_STORE_CONNECT_ISSUER_ID
