name: "Build iOS app"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_with_signing:
    runs-on: macos-latest

    steps:
      - name: Set up job
        run: echo "Setting up job..."

      - name: Set debug logging
        run: echo "##[debug]Logging enabled"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install -g @ionic/cli @capacitor/assets
          npm install

      - name: Add iOS platform
        run: npx cap add ios

      - name: Configure Git for Authentication
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global url."https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles          

      - name: Build Ionic app
        run: |
          ionic build
          npx cap sync ios

      - name: Build and sign iOS app using xcodebuild
        env:
          KEYCHAIN_PATH: $RUNNER_TEMP/app-signing.keychain-db
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          xcodebuild -project list-for-ios/list-for-ios.xcodeproj -scheme "list-for-ios" \
          -archivePath $RUNNER_TEMP/list-for-ios.xcarchive \
          -sdk iphoneos \
          -configuration Debug \
          clean archive \
          CODE_SIGN_STYLE=Manual \
          CODE_SIGN_IDENTITY="iPhone Distribution" \
          PROVISIONING_PROFILE_SPECIFIER=${{ secrets.PROVISIONING_PROFILE_SPECIFIER }} \
          DEVELOPMENT_TEAM=${{ secrets.DEVELOPMENT_TEAM_ID }} \
          OTHER_CODE_SIGN_FLAGS="--keychain $KEYCHAIN_PATH"

      - name: Export the archive
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST_BASE64 }}
        run: |
          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/list-for-ios.xcarchive -exportOptionsPlist $EXPORT_OPTS_PATH -exportPath $RUNNER_TEMP/build          

      - name: Upload application
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: $RUNNER_TEMP/build/list-for-ios.ipa
          retention-days: 3

      - name: Post Checkout repository
        run: echo "Post Checkout repository step"

      - name: Complete job
        run: echo "Job complete"
